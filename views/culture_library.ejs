<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />

    <script src="https://unpkg.com/axios/dist/axios.min.js"></script>

    <link rel="stylesheet" href="/static/css/header.css" />
    <link rel="stylesheet" href="/static/css/component.css" />
    <link rel="stylesheet" href="/static/css/footer.css" />

    <link
      rel="stylesheet"
      href="https://fonts.googleapis.com/css2?family=Material+Symbols+Outlined:opsz,wght,FILL,GRAD@24,400,0,0"
    />

    <link
      rel="stylesheet"
      href="https://cdnjs.cloudflare.com/ajax/libs/normalize/5.0.0/normalize.min.css"
    />

    <script src="https://unpkg.com/sweetalert/dist/sweetalert.min.js"></script>

    <title>culture</title>

    <style>
      .header {
        background-color: white;
      }
      .main-content {
        display: flex;
        width: 80%;
        flex-wrap: wrap;
        align-items: center;
      }

      .culture {
        background-color: white;
        border: 1px solid var(--color-black-1);
        border-radius: var(--border-radius-medium);
        width: 30%;
        height: auto;

        min-height: 300px;
        max-height: 900px;
        margin-left: 2rem;
        margin-top: 1rem;
        display: flex;
        flex-direction: column;
        padding: 0.25rem;
        align-items: center;
        padding: 0;
      }

      .title {
        margin: 0 0 var(--space-5);
      }

      .terms {
        width: 500px;
        height: 80px;
        display: flex;
        align-items: center;
        justify-content: center;
        border-radius: var(--border-radius-medium);
        margin: 0 0 var(--space-5);
      }

      #regionForm > select {
        width: 130px;
        height: 30px;
        font-size: 20px;
        border-radius: var(--border-radius-small);

        border: none;
      }

      option {
        background-color: white;
      }

      .common-btn {
        margin-left: var(--space-2);
        width: 150px;
        height: 50px;
      }

      .common-btn:hover::before {
        position: absolute;
        content: "";
        background-color: var(--color-orange-4);
        width: 100%;
        height: 100%;
        top: 0;
        left: 0;
        animation: fill 0.7s;
        animation-timing-function: linear;
      }

      .name {
        margin-top: 0;
        line-height: 3;
        border-radius: var(--border-radius-medium) var(--border-radius-medium) 0
          0;
      }
      .page {
        color: var(--color-orange-3);
      }

      .content {
        padding: 0 18px;
        height: auto;
        max-height: 0;
        overflow: hidden;
        transition: max-height 0.4s ease-out;
        width: 90%;
        text-align: center;
        margin-bottom: var(--space-1);
        font-size: 18px;
      }

      .mainContent {
        margin-top: 50px;
        display: flex;
        flex-direction: column;
        width: 100%;

        align-items: center;
        justify-content: center;
      }

      h1 {
        transform: translateY(20px);
        transition: all 0.4s ease;
        transition-delay: 0.2s;
        overflow: hidden;
        text-overflow: ellipsis;
        white-space: nowrap;
      }

      p {
        font-size: 18px;
        line-height: 24px;
        color: black;
        transform: translateY(20px);
        transition: all 0.4s ease;
        transition-delay: 0.3s;
        overflow: hidden;
        text-overflow: ellipsis;
      }

      .swiper-wrapper {
        height: 100%;
        max-height: none;
        width: 100%;
        display: flex;
        align-items: center;
        z-index: 1;
        position: relative;

        margin: auto;
      }

      .swiper-container {
        width: 600px;
        height: 500px;
        position: relative;
        margin: auto;
        border-radius: var(--border-radius-medium);
      }

      .slider-item {
        width: 100%;
        height: 100%;
        border-radius: 10px;
        overflow: hidden;
        display: flex;
        flex-direction: column;
        flex-shrink: 0;
        opacity: 0;
        background: var(--color-white-0);

        border-radius: var(--border-radius-medium);
        border: 2px solid var(--color-grey-0);
      }

      .sampleSlider {
        background: var(--color-white-0);
        display: flex;
        flex-direction: column;
        margin: var(--space-2) auto auto;
        height: 50%;
        width: 100%;

        border-radius: var(--border-radius-medium);
        border: 2px solid var(--color-grey-0);
      }

      .slider-item-content {
        padding: 32px;
        display: flex;
        flex-direction: column;
        justify-content: center;
        transition: 0.4s;
      }
      .slider-item-content > * {
        opacity: 0;
        transform: translateY(20px);
      }

      .swiper-slide-active .slider-item-content > * {
        transform: translateY(0px);
        opacity: 1;
      }

      .swiper-pagination {
        position: absolute;
        left: 50%;
        top: 1%;
        transform: translatex(-50%);
        z-index: 10;
        width: auto !important;
      }

      .swiper-pagination-bullet {
        width: 20px;
        height: 10px;
        border-radius: 10px;
        opacity: 1;
        background: var(--color-orange-2);
        display: inline-block;
        margin-right: 3px;
        cursor: pointer;
        transition: all 0.2s;
      }

      .swiper-pagination-bullet-active {
        background: var(--color-orange-4);
        width: 50px;
        height: 10px;
        border-radius: 10px;
      }

      .slider-buttons {
        display: flex;
        display: none;
        justify-content: space-between;
        width: 100%;
        margin-top: var(--space-2);
      }

      .swiper-button-next,
      .swiper-button-prev {
        font-size: 16px;
        position: relative;
        margin-left: 4px;
        color: var(--color-grey-1);
        border: none;
        border-radius: var(--border-radius-small);
        width: 80px;
      }
      .swiper-button-next:active,
      .swiper-button-prev:active {
        background-color: var(--color-orange-3);
      }

      .sMainTitle {
        font-size: 26px;
      }
      .sTitle {
        font-weight: 700;
        color: var(--color-orange-4);
        margin-top: var(--space-2);
        display: block;
      }
      .sText {
        height: auto;
        margin-top: var(--space-0);
        display: block;
      }

      .sampleText1 {
        height: auto;
        font-size: 24px;
        margin-top: 5%;
        display: block;
        color: var(--color-black-2);
        text-align: center;
      }
      .sampleText2 {
        height: auto;
        font-size: 18px;
        margin-top: var(--space-3);
        display: block;
        color: var(--color-black-2);
        text-align: center;
      }
      .back {
        margin: auto;
        width: fit-content;
      }

      .back > a,
      span {
        color: var(--color-black-2);
        font-size: 20px;
      }

      .common-text {
        color: var(--color-black-0);
      }

      body {
        background-color: var(--color-grey-1);
      }
      .backBtn {
        display: flex;

        width: auto;
      }

      .backBtn > p {
        margin: 0;
      }
    </style>
  </head>
  <body>
    <header><%- include("./component/header")%></header>

    <main id="main">
      <div class="mainContent">
        <h1 class="title">전국 도서관 정보 안내</h1>
        <div class="terms">
          <form
            action="/libraryAPI"
            name="regionForm"
            id="regionForm"
            onsubmit="submitForm(event)"
          >
            <select name="region" id="region">
              <option value="11">서울특별시</option>
              <option value="21">부산광역시</option>
              <option value="31">경기도</option>
            </select>
            <select name="dtl_region" id="dtl_region"></select>

            <button
              type="submit"
              onclick="submitForm(event)"
              class="common-btn"
            >
              <span class="common-text">정보 불러오기 </span>
            </button>
          </form>
        </div>
      </div>

      <div class="swiper-container">
        <div class="swiper-pagination"></div>
        <div class="swiper-wrapper">

          <div class="sampleSlider">
            <p class="sampleText1">
              원하는 지역을 선택후 불러오기 버튼을 눌러주세요!
            </p>
            <p class="sampleText2">아래 실시간 도서관 정보가 표시됩니다!</p>
            <p class="back">
              <a href="/culture"
                >이전 메뉴로 돌아가기<span class="material-symbols-outlined">
                  undo
                </span></a
              >
            </p>
          </div>

        </div>
        <div class="slider-buttons">
          <button class="swiper-button-prev common-btn">
            <span class="common-text">이전으로 </span>
          </button>
          <div class="backBtn">
            <p class="back">
              <a href="/culture">이전 메뉴로 돌아가기</a>
            </p>
          </div>
          <button class="swiper-button-next common-btn">
            <span class="common-text">다음으로 </span>
          </button>
        </div>
      </div>
    </main>

    <%- include("./component/footer")%>
    <!-- partial -->
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/Swiper/6.4.5/swiper-bundle.min.js"></script>
    <script>
      var swiper = new Swiper(".swiper-container", {
        slidesPerView: 1,
        spaceBetween: 20,
        effect: "fade",
        loop: true,
        speed: 300,
        mousewheel: {
          invert: false,
        },
        pagination: {
          el: ".swiper-pagination",
          clickable: true,
          dynamicBullets: true,
        },
        // Navigation arrows
        navigation: {
          nextEl: ".swiper-button-next",
          prevEl: ".swiper-button-prev",
        },
      });
    </script>

    <script>
      const regionForm = document.forms["regionForm"];
      const region = regionForm.querySelector("#region");
      const dtl_region = regionForm.querySelector("#dtl_region");

      function option() {
        dtl_region.innerHTML = "";
        if (region.value === "11") {
          const newOption1 = document.createElement("option");
          newOption1.value = "11010";
          newOption1.textContent = "종로구";
          dtl_region.add(newOption1);

          const newOption2 = document.createElement("option");
          newOption2.value = "11190";
          newOption2.textContent = "영등포구";
          dtl_region.add(newOption2);

          const newOption3 = document.createElement("option");
          newOption3.value = "11140";
          newOption3.textContent = "마포구";
          dtl_region.add(newOption3);
        } else if (region.value === "21") {
          const newOption1 = document.createElement("option");
          newOption1.value = "21090";
          newOption1.textContent = "해운대구";
          dtl_region.add(newOption1);

          const newOption2 = document.createElement("option");
          newOption2.value = "21110";
          newOption2.textContent = "금정구";
          dtl_region.add(newOption2);

          const newOption3 = document.createElement("option");
          newOption3.value = "21050";
          newOption3.textContent = "동래구";
          dtl_region.add(newOption3);
        } else if (region.value === "31") {
          const newOption1 = document.createElement("option");
          newOption1.value = "31103";
          newOption1.textContent = "일산 동구";
          dtl_region.add(newOption1);

          const newOption2 = document.createElement("option");
          newOption2.value = "31104";
          newOption2.textContent = "일산 서구";
          dtl_region.add(newOption2);

          const newOption3 = document.createElement("option");
          newOption3.value = "31191";
          newOption3.textContent = "용인시 처인구";
          dtl_region.add(newOption3);
        }
      }

      region.addEventListener("change", option);
      option();

      function submitForm(event) {
        event.preventDefault();

        const selectRegion = region.value;
        const selectDtl = dtl_region.value;

        fetch(
          `/libraryAPI?selectRegion=${selectRegion}&selectDtl=${selectDtl}`,
          {
            method: "get",
            headers: {
              "Content-Type": "application/json",
            },
          }
        )
          .then((response) => response.json())
          .then((data) => {
            // 서버로부터 받은 데이터를 처리
            apiData(data);
          })
          .catch((error) => {
            console.error("Error fetching data:", error);
          });
        return false;
      }

      function apiData(data) {

        // xml 데이터 변환
        const parser = new DOMParser();
        const xmlDoc = parser.parseFromString(data, "text/xml");

        const libName = xmlDoc.getElementsByTagName("libName");
        const libAddress = xmlDoc.getElementsByTagName("address");
        const libPage = xmlDoc.getElementsByTagName("homepage");
        const libClose = xmlDoc.getElementsByTagName("closed");
        const libTime = xmlDoc.getElementsByTagName("operatingTime");

        try {
          const parser = new DOMParser();
          const xmlDoc = parser.parseFromString(data, "text/xml");

          const libName = xmlDoc.getElementsByTagName("libName");
          const libAddress = xmlDoc.getElementsByTagName("address");
          const libPage = xmlDoc.getElementsByTagName("homepage");
          const libClose = xmlDoc.getElementsByTagName("closed");
          const libTime = xmlDoc.getElementsByTagName("operatingTime");

          const dataElem = document.querySelector(".swiper-wrapper");
          dataElem.innerHTML = "";

          for (let i = 0; i < libName.length; i++) {
            const name = libName[i].textContent || "N/A";
            const address = libAddress[i].textContent || "N/A";
            const page = libPage[i].textContent || "N/A";
            const close = libClose[i].textContent || "N/A";
            const time = libTime[i].textContent || "N/A";

            const buttondiv = document.querySelector(".slider-buttons");
            buttondiv.style.display = "flex";
            const libraryDiv = document.createElement("div");
            libraryDiv.classList.add("slider-item", "swiper-slide");

            const libraryDiv2 = document.createElement("div");
            libraryDiv2.classList.add("slider-item-content");

            const libraryButton = document.createElement("div");
            libraryButton.classList.add("slider-buttons");

            libraryDiv2.innerHTML =
              `<h1 class="sMainTitle"> ${name}</h1>` +
              `<p class="sTitle">주소</p>` +
              `<p class="sText">${address}</p>` +
              `<p class="sTitle">영업시간 </p>` +
              `<p class="sText">${time}</p>` +
              `<p class="sTitle">휴무일 </p>` +
              `<p class="sText"> ${close} </p>` +
              `<p class="sTitle"> <a href=${page}>홈페이지 바로가기 </a></p>`;

            libraryDiv.appendChild(libraryDiv2);

            dataElem.appendChild(libraryDiv);
            swiper.update();
            // addEvent();
          }
        } catch (error) {
          console.error("Error parsing or displaying data:", error);
        }
      }

      async function logout(event) {
        event.preventDefault();
        const res = await axios({
          method: "post",
          url: "/logout",
        });
        swal("로그아웃이 완료되었습니다!", "", "success").then(function () {
          location.href = "/culture/library";
        });
      }
    </script>
  </body>
</html>
